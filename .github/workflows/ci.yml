# .github/workflows/ci.yml
name: Python application

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.10"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8

      - name: Syntax check (py_compile)
        run: |
          python -m py_compile $(git ls-files '*.py' || echo "")

      - name: Lint (flake8)
        run: |
          # критичные ошибки
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # остальные как предупреждения
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  docker_build:
    runs-on: ubuntu-latest
    needs: [lint]
    if: ${{ hashFiles('Dockerfile') != '' }}
    steps:
      - uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: myorg/myapp
          tags: |
            type=ref,event=branch
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry (optional)
        if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build (and optionally push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && secrets.DOCKERHUB_TOKEN != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify container starts and responds (script)
        env:
          IMAGE_TAGS: ${{ steps.meta.outputs.tags }}
          PORT: "8000"            
          HEALTH_PATH: "/health"  
          STARTUP_TIMEOUT: "20"
          CONTAINER_NAME: "app-test"
        run: bash scripts/verify_container.sh
